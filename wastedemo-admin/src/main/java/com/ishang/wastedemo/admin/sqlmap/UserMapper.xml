<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ishang.wastedemo.admin.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.ishang.wastedemo.admin.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="tel" jdbcType="CHAR" property="tel" />
    <result column="role" jdbcType="TINYINT" property="role" />
    <result column="point" jdbcType="INTEGER" property="point" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ishang.wastedemo.admin.entity.User">
    insert into user (id, `name`, `password`, 
      realname, tel, `role`, point, 
      del_flag)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{tel,jdbcType=CHAR}, #{role,jdbcType=TINYINT}, #{point,jdbcType=INTEGER}, 
      #{delFlag,jdbcType=TINYINT})
  </insert>
  <update id="updateAllByID" parameterType="com.ishang.wastedemo.admin.entity.User">
    update user
    set `name` = #{name,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=CHAR},
      `role` = #{role,jdbcType=TINYINT},
      point = #{point,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, `name`, `password`, realname, tel, `role`, point, del_flag
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, `name`, `password`, realname, tel, `role`, point, del_flag
    from user
  </select>


  <!-- 只更新有变化的字段 -->
  <update id="updateByPrimaryKey" parameterType="com.ishang.wastedemo.admin.entity.User">
	update user
	<trim prefix="set" suffixOverrides=",">
		<if test="name != null">`name` = #{name,jdbcType=VARCHAR},</if>
		<if test="password != null">`password` = #{password,jdbcType=VARCHAR},</if>
		<if test="role != null">`role` = #{role,jdbcType=TINYINT},</if>
		<if test="tel != null">tel = #{tel,jdbcType=CHAR},</if>
		<if test="realname != null">realname = #{realname,jdbcType=VARCHAR},</if>
		<if test="point != null">point = #{point,jdbcType=INTEGER},</if>
		<if test="delFlag != null">del_flag = #{delFlag,jdbcType=TINYINT},</if>
	</trim>
    where id = #{id,jdbcType=INTEGER}
   </update>
   
   <select id="findbyentity" parameterType="com.ishang.wastedemo.admin.entity.User" resultMap="BaseResultMap">
     select id, `name`, `password`, realname, tel, `role`, point, del_flag
     from user
     where name like concat('%',#{name,jdbcType=VARCHAR},'%') 
   </select>

  <select id="findbyname" parameterType="java.lang.String" resultMap="BaseResultMap">
     select id, `name`, `password`, realname, tel, `role`, point, del_flag
     from user
     where name = #{name}
   </select>
</mapper>